0 xor [1, 2, 1, 3, 2, 5] -> 6 (0110)

consider the last set bit from right to left(0110), that is 0010
                                               ^
all numbers in nums can be divided into two groups, by whether this bit is set or unset.

group 1: [2, 3, 2]
group 2: [1, 1, 5]

6 xor [2, 3, 2] -> 5
6 xor [1, 1, 5] -> 5

how to get the last set bit from right to left?

method 1:
	a & (a-1) ^ a
let  a       = bbbbbbb...bbbbbbbbb10000...000, n >= 0
                \_not important_/   \_n 0s_/

then a-1     = bbbbbbb...bbbbbbbbb01111...111
                \_not important_/   \_n 1s_/

then a&(a-1) = bbbbbbb...bbbbbbbbb00000...000
                \_not important_/  \_n+1 0s_/

so a&(a-1)^a = 0000000...00000000010000...000
                \_not important_/   \_n 0s_/

method 2:
	a & (-a)
let  a       = bbbbbbb...bbbbbbbbb10000...000, n >= 0
                \_not important_/   \_n 0s_/

-a = ~a + 1  = BBBBBBB...BBBBBBBBB10000...000
                \_not important_/   \_n 0s_/

so a&(-a)    = 0000000...00000000010000...000
                \_not important_/   \_n 0s_/